# Generated by Django 5.2.6 on 2025-09-24 00:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0009_merge_20250923_2117'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email del usuario invitado', max_length=254)),
                ('role', models.CharField(choices=[('owner', 'Propietario'), ('admin', 'Administrador'), ('member', 'Miembro'), ('viewer', 'Solo Vista')], default='member', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('accepted', 'Aceptada'), ('declined', 'Rechazada'), ('expired', 'Expirada')], default='pending', max_length=10)),
                ('can_add_expenses', models.BooleanField(default=True)),
                ('can_edit_expenses', models.BooleanField(default=False)),
                ('can_manage_members', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='Fecha de expiración de la invitación')),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('invitation_token', models.CharField(help_text='Token único para la invitación', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'api_project_invitation',
            },
        ),
        migrations.CreateModel(
            name='ProjectMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Propietario'), ('admin', 'Administrador'), ('member', 'Miembro'), ('viewer', 'Solo Vista')], default='member', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('can_add_expenses', models.BooleanField(default=True)),
                ('can_edit_expenses', models.BooleanField(default=False)),
                ('can_manage_members', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'api_project_membership',
            },
        ),
        migrations.AlterModelOptions(
            name='gasto',
            options={'ordering': ['-fecha_gasto', '-created_at']},
        ),
        migrations.AddField(
            model_name='gasto',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='gasto',
            name='is_shared',
            field=models.BooleanField(default=False, help_text='Si es un gasto compartido entre miembros del proyecto'),
        ),
        migrations.AddField(
            model_name='gasto',
            name='paid_by',
            field=models.ForeignKey(blank=True, help_text='Quien pagó realmente el gasto', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gastos_pagados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gasto',
            name='split_type',
            field=models.CharField(choices=[('equal', 'División Igual'), ('percentage', 'Por Porcentaje'), ('amount', 'Por Monto Fijo'), ('custom', 'Personalizado')], default='equal', help_text='Tipo de división del gasto', max_length=15),
        ),
        migrations.AddField(
            model_name='gasto',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='gasto',
            name='categoria',
            field=models.CharField(choices=[('finanzas', 'Finanzas'), ('salud', 'Salud'), ('transporte', 'Transporte'), ('comida', 'Comida'), ('indumentaria', 'Indumentaria'), ('tecnologia', 'Tecnologia'), ('inversiones', 'Inversiones'), ('alojamiento', 'Alojamiento'), ('entretenimiento', 'Entretenimiento'), ('otros', 'Otros')], default='otros', max_length=24),
        ),
        migrations.AlterField(
            model_name='gasto',
            name='moneda',
            field=models.CharField(choices=[('ARS', 'Peso Argentino'), ('USD', 'Dolar Americano'), ('EUR', 'Euro'), ('BRL', 'Real Brasileño'), ('CLP', 'Peso Chileno'), ('NA', 'Otros')], default='ARS', max_length=3),
        ),
        migrations.AlterField(
            model_name='gasto',
            name='user',
            field=models.ForeignKey(default=1, help_text='Usuario que registró el gasto', on_delete=django.db.models.deletion.CASCADE, related_name='gastos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterModelTable(
            name='gasto',
            table='api_gasto',
        ),
        migrations.AlterModelTable(
            name='mediopago',
            table='api_medio_pago',
        ),
        migrations.CreateModel(
            name='ExpenseSplit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(help_text='Monto que debe pagar este usuario')),
                ('percentage', models.FloatField(blank=True, help_text='Porcentaje del total (si aplica)', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('paid', 'Pagado'), ('confirmed', 'Confirmado'), ('disputed', 'Disputado')], default='pending', max_length=10)),
                ('paid_amount', models.FloatField(default=0, help_text='Monto ya pagado por este usuario')),
                ('paid_date', models.DateTimeField(blank=True, help_text='Fecha de pago', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Notas sobre este split', max_length=200)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_splits', to='api.gasto')),
                ('paid_to', models.ForeignKey(blank=True, help_text='A quién se le pagó', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_payments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='Usuario que debe pagar esta parte', on_delete=django.db.models.deletion.CASCADE, related_name='expense_splits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_expense_split',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre del proyecto/viaje/grupo', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción del proyecto', max_length=500)),
                ('project_type', models.CharField(choices=[('trip', 'Viaje'), ('project', 'Proyecto'), ('group', 'Grupo'), ('event', 'Evento'), ('shared', 'Gastos Compartidos')], default='shared', max_length=20)),
                ('default_currency', models.CharField(choices=[('ARS', 'Peso Argentino'), ('USD', 'Dolar Americano'), ('EUR', 'Euro'), ('BRL', 'Real Brasileño'), ('CLP', 'Peso Chileno')], default='ARS', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_new_members', models.BooleanField(default=True, help_text='Permitir que se agreguen nuevos miembros')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField(blank=True, help_text='Fecha de inicio del proyecto', null=True)),
                ('end_date', models.DateField(blank=True, help_text='Fecha de fin del proyecto', null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_project',
                'ordering': ['-updated_at', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='gasto',
            name='project',
            field=models.ForeignKey(blank=True, help_text='Proyecto asociado', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gastos', to='api.project'),
        ),
        migrations.AddField(
            model_name='mediopago',
            name='project',
            field=models.ForeignKey(blank=True, help_text='Proyecto asociado (opcional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medios_pago', to='api.project'),
        ),
        migrations.AddIndex(
            model_name='gasto',
            index=models.Index(fields=['user'], name='api_gasto_user_id_ccebaa_idx'),
        ),
        migrations.AddIndex(
            model_name='gasto',
            index=models.Index(fields=['project'], name='api_gasto_project_2b7205_idx'),
        ),
        migrations.AddIndex(
            model_name='gasto',
            index=models.Index(fields=['fecha_gasto'], name='api_gasto_fecha_g_80b57b_idx'),
        ),
        migrations.AddIndex(
            model_name='gasto',
            index=models.Index(fields=['categoria'], name='api_gasto_categor_317e7b_idx'),
        ),
        migrations.AddIndex(
            model_name='gasto',
            index=models.Index(fields=['is_shared'], name='api_gasto_is_shar_a27b1b_idx'),
        ),
        migrations.AddIndex(
            model_name='mediopago',
            index=models.Index(fields=['user'], name='api_medio_p_user_id_ea7452_idx'),
        ),
        migrations.AddIndex(
            model_name='mediopago',
            index=models.Index(fields=['project'], name='api_medio_p_project_6e24a8_idx'),
        ),
        migrations.AddField(
            model_name='projectinvitation',
            name='invited_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectinvitation',
            name='invited_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectinvitation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='api.project'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.project'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(related_name='projects', through='api.ProjectMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='expensesplit',
            index=models.Index(fields=['expense'], name='api_expense_expense_9ea98f_idx'),
        ),
        migrations.AddIndex(
            model_name='expensesplit',
            index=models.Index(fields=['user'], name='api_expense_user_id_e14808_idx'),
        ),
        migrations.AddIndex(
            model_name='expensesplit',
            index=models.Index(fields=['status'], name='api_expense_status_3aed04_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='expensesplit',
            unique_together={('expense', 'user')},
        ),
        migrations.AddIndex(
            model_name='projectinvitation',
            index=models.Index(fields=['project'], name='api_project_project_a763ad_idx'),
        ),
        migrations.AddIndex(
            model_name='projectinvitation',
            index=models.Index(fields=['invited_user'], name='api_project_invited_56469b_idx'),
        ),
        migrations.AddIndex(
            model_name='projectinvitation',
            index=models.Index(fields=['status'], name='api_project_status_6150c4_idx'),
        ),
        migrations.AddIndex(
            model_name='projectinvitation',
            index=models.Index(fields=['invitation_token'], name='api_project_invitat_c0691f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='projectinvitation',
            unique_together={('project', 'email')},
        ),
        migrations.AddIndex(
            model_name='projectmembership',
            index=models.Index(fields=['project', 'is_active'], name='api_project_project_fd780f_idx'),
        ),
        migrations.AddIndex(
            model_name='projectmembership',
            index=models.Index(fields=['user', 'is_active'], name='api_project_user_id_48e70b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='projectmembership',
            unique_together={('project', 'user')},
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['owner'], name='api_project_owner_i_235ae6_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['is_active'], name='api_project_is_acti_ac03ad_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_type'], name='api_project_project_a5b9da_idx'),
        ),
    ]
