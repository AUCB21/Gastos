# Generated by safe migration script - Part 2
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_add_grupos_safely'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Crear tabla GrupoInvitation
        migrations.RunSQL(
            sql="""
            CREATE TABLE IF NOT EXISTS api_grupo_invitation (
                id SERIAL PRIMARY KEY,
                grupo_id INTEGER NOT NULL REFERENCES api_grupo(id) ON DELETE CASCADE,
                invited_by_id INTEGER NOT NULL REFERENCES auth_user(id) ON DELETE CASCADE,
                invited_user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
                email VARCHAR(254) NOT NULL,
                role VARCHAR(10) DEFAULT 'member',
                status VARCHAR(10) DEFAULT 'pending',
                can_add_expenses BOOLEAN DEFAULT true,
                can_edit_expenses BOOLEAN DEFAULT false,
                can_manage_members BOOLEAN DEFAULT false,
                created_at TIMESTAMPTZ DEFAULT NOW(),
                expires_at TIMESTAMPTZ NOT NULL,
                responded_at TIMESTAMPTZ,
                invitation_token VARCHAR(100) UNIQUE NOT NULL,
                UNIQUE(grupo_id, email)
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS api_grupo_invitation CASCADE;"
        ),
        
        # Crear tabla ExpenseSplit
        migrations.RunSQL(
            sql="""
            CREATE TABLE IF NOT EXISTS api_expense_split (
                id SERIAL PRIMARY KEY,
                expense_id INTEGER NOT NULL REFERENCES api_gasto(id) ON DELETE CASCADE,
                user_id INTEGER NOT NULL REFERENCES auth_user(id) ON DELETE CASCADE,
                paid_to_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
                amount FLOAT NOT NULL,
                percentage FLOAT,
                status VARCHAR(10) DEFAULT 'pending',
                paid_amount FLOAT DEFAULT 0,
                paid_date TIMESTAMPTZ,
                created_at TIMESTAMPTZ DEFAULT NOW(),
                updated_at TIMESTAMPTZ DEFAULT NOW(),
                notes TEXT DEFAULT '',
                UNIQUE(expense_id, user_id)
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS api_expense_split CASCADE;"
        ),
        
        # Agregar columnas faltantes a api_gasto para gastos compartidos
        migrations.RunSQL(
            sql="""
            ALTER TABLE api_gasto 
            ADD COLUMN IF NOT EXISTS is_shared BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS split_type VARCHAR(15) DEFAULT 'equal',
            ADD COLUMN IF NOT EXISTS paid_by_id INTEGER REFERENCES auth_user(id);
            """,
            reverse_sql="""
            ALTER TABLE api_gasto 
            DROP COLUMN IF EXISTS is_shared,
            DROP COLUMN IF EXISTS split_type,
            DROP COLUMN IF EXISTS paid_by_id;
            """
        ),
        
        # Crear más índices
        migrations.RunSQL(
            sql="""
            CREATE INDEX IF NOT EXISTS api_grupo_invitation_grupo_idx ON api_grupo_invitation(grupo_id);
            CREATE INDEX IF NOT EXISTS api_grupo_invitation_user_idx ON api_grupo_invitation(invited_user_id);
            CREATE INDEX IF NOT EXISTS api_grupo_invitation_status_idx ON api_grupo_invitation(status);
            CREATE INDEX IF NOT EXISTS api_grupo_invitation_token_idx ON api_grupo_invitation(invitation_token);
            CREATE INDEX IF NOT EXISTS api_expense_split_expense_idx ON api_expense_split(expense_id);
            CREATE INDEX IF NOT EXISTS api_expense_split_user_idx ON api_expense_split(user_id);
            CREATE INDEX IF NOT EXISTS api_expense_split_status_idx ON api_expense_split(status);
            CREATE INDEX IF NOT EXISTS api_gasto_shared_idx ON api_gasto(is_shared);
            """,
            reverse_sql="""
            DROP INDEX IF EXISTS api_grupo_invitation_grupo_idx;
            DROP INDEX IF EXISTS api_grupo_invitation_user_idx;
            DROP INDEX IF EXISTS api_grupo_invitation_status_idx;
            DROP INDEX IF EXISTS api_grupo_invitation_token_idx;
            DROP INDEX IF EXISTS api_expense_split_expense_idx;
            DROP INDEX IF EXISTS api_expense_split_user_idx;
            DROP INDEX IF EXISTS api_expense_split_status_idx;
            DROP INDEX IF EXISTS api_gasto_shared_idx;
            """
        ),
    ]